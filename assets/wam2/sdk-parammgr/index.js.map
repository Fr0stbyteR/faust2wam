{
  "version": 3,
  "sources": ["../src/CompositeAudioNode.js", "../src/sdk/src/addFunctionModule.js", "../src/ParamMgrProcessor.js", "../src/sdk/src/WamParameterInfo.js", "../src/ParamConfigurator.js", "../src/MgrAudioParam.js", "../src/ParamMgrNode.js", "../src/ParamMgrFactory.js"],
  "sourcesContent": ["/** @typedef {import('@webaudiomodules/api').WamNode} WamNode */\n/** @typedef {import('@webaudiomodules/api').WebAudioModule} WebAudioModule */\n\n/**\n * @implements {WamNode}\n */\nexport default class CompositeAudioNode extends GainNode {\n\tget groupId() {\n\t\treturn this._wamNode.groupId;\n\t}\n\n\tget moduleId() {\n\t\treturn this._wamNode.moduleId;\n\t}\n\n\tget instanceId() {\n\t\treturn this._wamNode.instanceId;\n\t}\n\n\tget module() {\n\t\treturn this._wamNode.module;\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['addEventListener']>} args\n\t */\n\taddEventListener(...args) {\n\t\treturn this._wamNode.addEventListener(...args);\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['removeEventListener']>} args\n\t */\n\tremoveEventListener(...args) {\n\t\treturn this._wamNode.removeEventListener(...args);\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['dispatchEvent']>} args\n\t */\n    dispatchEvent(...args) {\n\t\treturn this._wamNode.dispatchEvent(...args);\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['getParameterInfo']>} args\n\t */\n\tgetParameterInfo(...args) {\n\t\treturn this._wamNode.getParameterInfo(...args);\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['getParameterValues']>} args\n\t */\n\tgetParameterValues(...args) {\n\t\treturn this._wamNode.getParameterValues(...args);\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['setParameterValues']>} args\n\t */\n\tsetParameterValues(...args) {\n\t\treturn this._wamNode.setParameterValues(...args);\n\t}\n\n\tgetState() {\n\t\treturn this._wamNode.getState();\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['setState']>} args\n\t */\n\tsetState(...args) {\n\t\treturn this._wamNode.setState(...args);\n\t}\n\n\tgetCompensationDelay() {\n\t\treturn this._wamNode.getCompensationDelay();\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['scheduleEvents']>} args\n\t */\n\tscheduleEvents(...args) {\n\t\treturn this._wamNode.scheduleEvents(...args);\n\t}\n\n\tclearEvents() {\n\t\treturn this._wamNode.clearEvents();\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['connectEvents']>} args\n\t */\n\tconnectEvents(...args) {\n\t\treturn this._wamNode.connectEvents(...args);\n\t}\n\n\t/**\n\t * @param {Parameters<WamNode['disconnectEvents']>} args\n\t */\n\tdisconnectEvents(...args) {\n\t\treturn this._wamNode.disconnectEvents(...args);\n\t}\n\n\tdestroy() {\n\t\treturn this._wamNode.destroy();\n\t}\n\n\t/**\n\t * @type {AudioNode}\n\t */\n\t_output = undefined;\n\n\t/**\n\t * @type {WamNode}\n\t */\n\t_wamNode = undefined;\n\n\tset channelCount(count) {\n\t\tif (this._output) this._output.channelCount = count;\n\t\telse super.channelCount = count;\n\t}\n\n\tget channelCount() {\n\t\tif (this._output) return this._output.channelCount;\n\t\treturn super.channelCount;\n\t}\n\n\tset channelCountMode(mode) {\n\t\tif (this._output) this._output.channelCountMode = mode;\n\t\telse super.channelCountMode = mode;\n\t}\n\n\tget channelCountMode() {\n\t\tif (this._output) return this._output.channelCountMode;\n\t\treturn super.channelCountMode;\n\t}\n\n\tset channelInterpretation(interpretation) {\n\t\tif (this._output) this._output.channelInterpretation = interpretation;\n\t\telse super.channelInterpretation = interpretation;\n\t}\n\n\tget channelInterpretation() {\n\t\tif (this._output) return this._output.channelInterpretation;\n\t\treturn super.channelInterpretation;\n\t}\n\n\tget numberOfInputs() {\n\t\treturn super.numberOfInputs;\n\t}\n\n\tget numberOfOutputs() {\n\t\tif (this._output) return this._output.numberOfOutputs;\n\t\treturn super.numberOfOutputs;\n\t}\n\n\tget gain() {\n\t\treturn undefined;\n\t}\n\n\tconnect(...args) {\n\t\t// @ts-ignore\n\t\tif (this._output && this._output !== this) return this._output.connect(...args);\n\t\t// @ts-ignore\n\t\treturn super.connect(...args);\n\t}\n\n\tdisconnect(...args) {\n\t\t// @ts-ignore\n\t\tif (this._output && this._output !== this) return this._output.disconnect(...args);\n\t\t// @ts-ignore\n\t\treturn super.disconnect(...args);\n\t}\n}\n", "/**\r\n * Take a function, stringify it and inject to an AudioWorklet with parameters.\r\n *\r\n * @param {AudioWorklet} audioWorklet\r\n * @param {(...args: any[]) => any} processorFunction\r\n * @param {any[]} [injection]\r\n * @returns {Promise<void>}\r\n */\r\nconst addFunctionModule = (audioWorklet, processorFunction, ...injection) => {\r\n    const text = `(${processorFunction.toString()})(${injection.map((s) => JSON.stringify(s)).join(', ')});`\r\n    const url = URL.createObjectURL(new Blob([text], { type: 'text/javascript' }));\r\n    return audioWorklet.addModule(url);\r\n}\r\n\r\nexport default addFunctionModule;\r\n", "/** @typedef {import('@webaudiomodules/api').WamProcessor} WamProcessor */\n/** @typedef {import('@webaudiomodules/api').WamParameterInfoMap} WamParameterInfoMap */\n/** @typedef {import('@webaudiomodules/api').WamParameterDataMap} WamParameterValueMap */\n/** @typedef {import('@webaudiomodules/api').WamEvent} WamEvent */\n/** @typedef {import('./types').ParamMgrOptions} ParamMgrProcessorOptions */\n/** @typedef {import('./TypedAudioWorklet').AudioWorkletGlobalScope} AudioWorkletGlobalScope */\n/** @typedef {import('./TypedAudioWorklet').TypedAudioWorkletProcessor} AudioWorkletProcessor */\n/** @template M @typedef {import('./types').MessagePortRequest<M>} MessagePortRequest */\n/** @template M @typedef {import('./types').MessagePortResponse<M>} MessagePortResponse */\n/** @typedef {import('./types').ParamMgrCallFromProcessor} ParamMgrCallFromProcessor */\n/** @typedef {import('./types').ParamMgrCallToProcessor} ParamMgrCallToProcessor */\n/** @typedef {import('./types').ParamMgrAudioWorkletOptions} ParamMgrAudioWorkletOptions */\n/** @typedef {import('./types').ParametersMapping} ParametersMapping */\n\n/**\n * Main function to stringify as a worklet.\n *\n * @param {string} moduleId processor identifier\n * @param {WamParameterInfoMap} paramsConfig parameterDescriptors\n */\nconst processor = (moduleId, paramsConfig) => {\n\t/** @type {AudioWorkletGlobalScope} */\n\t// @ts-ignore\n\tconst audioWorkletGlobalScope = globalThis;\n\tconst {\n\t\tAudioWorkletProcessor,\n\t\tregisterProcessor,\n\t\twebAudioModules,\n\t} = audioWorkletGlobalScope;\n\n\tconst supportSharedArrayBuffer = !!globalThis.SharedArrayBuffer;\n\tconst SharedArrayBuffer = globalThis.SharedArrayBuffer || globalThis.ArrayBuffer;\n\tconst normExp = (x, e) => (e === 0 ? x : x ** (1.5 ** -e));\n\tconst normalizeE = (x, min, max, e = 0) => (\n\t\tmin === 0 && max === 1\n\t\t\t? normExp(x, e)\n\t\t\t: normExp((x - min) / (max - min) || 0, e));\n\tconst normalize = (x, min, max) => (min === 0 && max === 1 ? x : (x - min) / (max - min) || 0);\n\tconst denormalize = (x, min, max) => (min === 0 && max === 1 ? x : x * (max - min) + min);\n\tconst mapValue = (x, eMin, eMax, sMin, sMax, tMin, tMax) => (\n\t\tdenormalize(\n\t\t\tnormalize(\n\t\t\t\tnormalize(\n\t\t\t\t\tMath.min(sMax, Math.max(sMin, x)),\n\t\t\t\t\teMin,\n\t\t\t\t\teMax,\n\t\t\t\t),\n\t\t\t\tnormalize(sMin, eMin, eMax),\n\t\t\t\tnormalize(sMax, eMin, eMax),\n\t\t\t),\n\t\t\ttMin,\n\t\t\ttMax,\n\t\t)\n\t);\n\n\t/**\n\t * @typedef {MessagePortRequest<ParamMgrCallToProcessor> & MessagePortResponse<ParamMgrCallFromProcessor>} MsgIn\n\t * @typedef {MessagePortResponse<ParamMgrCallToProcessor> & MessagePortRequest<ParamMgrCallFromProcessor>} MsgOut\n\t */\n\t/**\n\t * `ParamMgrNode`'s `AudioWorkletProcessor`\n\t *\n\t * @extends {AudioWorkletProcessor<MsgIn, MsgOut>}\n\t * @implements {WamProcessor}\n\t * @implements {ParamMgrCallToProcessor}\n\t */\n\tclass ParamMgrProcessor extends AudioWorkletProcessor {\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn Object.entries(paramsConfig).map(([name, { defaultValue, minValue, maxValue }]) => ({\n\t\t\t\tname,\n\t\t\t\tdefaultValue,\n\t\t\t\tminValue,\n\t\t\t\tmaxValue,\n\t\t\t}));\n\t\t}\n\n\t\t/**\n\t\t * @param {ParamMgrProcessorOptions} options\n\t\t */\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.destroyed = false;\n\t\t\tthis.supportSharedArrayBuffer = supportSharedArrayBuffer;\n\t\t\tconst {\n\t\t\t\tparamsMapping,\n\t\t\t\tinternalParamsMinValues,\n\t\t\t\tinternalParams,\n\t\t\t\tgroupId,\n\t\t\t\tinstanceId,\n\t\t\t} = options.processorOptions;\n\t\t\tthis.groupId = groupId;\n\t\t\tthis.moduleId = moduleId;\n\t\t\tthis.instanceId = instanceId;\n\t\t\tthis.internalParamsMinValues = internalParamsMinValues;\n\t\t\tthis.paramsConfig = paramsConfig;\n\t\t\tthis.paramsMapping = paramsMapping;\n\t\t\t/** @type {Record<string, number>} */\n\t\t\tthis.paramsValues = {};\n\t\t\tObject.entries(paramsConfig).forEach(([name, { defaultValue }]) => {\n\t\t\t\tthis.paramsValues[name] = defaultValue;\n\t\t\t});\n\t\t\tthis.internalParams = internalParams;\n\t\t\tthis.internalParamsCount = this.internalParams.length;\n\t\t\tthis.buffer = new SharedArrayBuffer((this.internalParamsCount + 1) * Float32Array.BYTES_PER_ELEMENT);\n\t\t\tthis.$lock = new Int32Array(this.buffer, 0, 1);\n\t\t\tthis.$internalParamsBuffer = new Float32Array(this.buffer, 4, this.internalParamsCount);\n\t\t\t/** @type {WamEvent[]} */\n\t\t\tthis.eventQueue = [];\n\n\t\t\t/** @type {(event: WamEvent) => any} */\n\t\t\tthis.handleEvent = null;\n\n\t\t\taudioWorkletGlobalScope.webAudioModules.addWam(this);\n\n\t\t\tthis.messagePortRequestId = -1;\n\t\t\t/** @type {Record<number, ((...args: any[]) => any)>} */\n\t\t\tconst resolves = {};\n\t\t\t/** @type {Record<number, ((...args: any[]) => any)>} */\n\t\t\tconst rejects = {};\n\t\t\t/**\n\t\t\t * @param {keyof ParamMgrCallFromProcessor} call\n\t\t\t * @param {any} args\n\t\t\t */\n\t\t\tthis.call = (call, ...args) => new Promise((resolve, reject) => {\n\t\t\t\tconst id = this.messagePortRequestId--;\n\t\t\t\tresolves[id] = resolve;\n\t\t\t\trejects[id] = reject;\n\t\t\t\tthis.port.postMessage({ id, call, args });\n\t\t\t});\n\t\t\tthis.handleMessage = ({ data }) => {\n\t\t\t\tconst { id, call, args, value, error } = data;\n\t\t\t\tif (call) {\n\t\t\t\t\t/** @type {any} */\n\t\t\t\t\tconst r = { id };\n\t\t\t\t\ttry {\n\t\t\t\t\t\tr.value = this[call](...args);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tr.error = e;\n\t\t\t\t\t}\n\t\t\t\t\tthis.port.postMessage(r);\n\t\t\t\t} else {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tif (rejects[id]) rejects[id](error);\n\t\t\t\t\t\tdelete rejects[id];\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (resolves[id]) {\n\t\t\t\t\t\tresolves[id](value);\n\t\t\t\t\t\tdelete resolves[id];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.port.start();\n\t\t\tthis.port.addEventListener('message', this.handleMessage);\n\t\t}\n\n\t\t/**\n\t\t * @param {ParametersMapping} mapping\n\t\t */\n\t\tsetParamsMapping(mapping) {\n\t\t\tthis.paramsMapping = mapping;\n\t\t}\n\n\t\tgetBuffer() {\n\t\t\treturn { lock: this.$lock, paramsBuffer: this.$internalParamsBuffer };\n\t\t}\n\n\t\tgetCompensationDelay() {\n\t\t\treturn 128;\n\t\t}\n\n\t\t/**\n\t\t * @param {string[]} parameterIdQuery\n\t\t */\n\t\tgetParameterInfo(...parameterIdQuery) {\n\t\t\tif (parameterIdQuery.length === 0) parameterIdQuery = Object.keys(this.paramsConfig);\n\t\t\t/** @type {WamParameterInfoMap} */\n\t\t\tconst parameterInfo = {};\n\t\t\tparameterIdQuery.forEach((parameterId) => {\n\t\t\t\tparameterInfo[parameterId] = this.paramsConfig[parameterId];\n\t\t\t});\n\t\t\treturn parameterInfo;\n\t\t}\n\n\t\t/**\n\t\t * @param {boolean} [normalized]\n\t\t * @param {string[]} parameterIdQuery\n\t\t */\n\t\tgetParameterValues(normalized, ...parameterIdQuery) {\n\t\t\tif (parameterIdQuery.length === 0) parameterIdQuery = Object.keys(this.paramsConfig);\n\t\t\t/** @type {WamParameterValueMap} */\n\t\t\tconst parameterValues = {};\n\t\t\tparameterIdQuery.forEach((parameterId) => {\n\t\t\t\tif (!(parameterId in this.paramsValues)) return;\n\t\t\t\tconst { minValue, maxValue, exponent } = this.paramsConfig[parameterId];\n\t\t\t\tconst value = this.paramsValues[parameterId];\n\t\t\t\tparameterValues[parameterId] = {\n\t\t\t\t\tid: parameterId,\n\t\t\t\t\tvalue: normalized ? normalizeE(value, minValue, maxValue, exponent) : value,\n\t\t\t\t\tnormalized,\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn parameterValues;\n\t\t}\n\n\t\t/**\n\t\t * @param {WamEvent[]} events\n\t\t */\n\t\tscheduleEvents(...events) {\n\t\t\tthis.eventQueue.push(...events);\n\t\t\tconst { currentTime } = audioWorkletGlobalScope;\n\t\t\tthis.eventQueue.sort((a, b) => (a.time || currentTime) - (b.time || currentTime));\n\t\t}\n\n\t\t/**\n\t\t * @param {WamEvent[]} events\n\t\t */\n\t\temitEvents(...events) {\n\t\t\twebAudioModules.emitEvents(this, ...events);\n\t\t}\n\n\t\tclearEvents() {\n\t\t\tthis.eventQueue = [];\n\t\t}\n\n\t\tlock() {\n\t\t\tif (globalThis.Atomics) Atomics.store(this.$lock, 0, 1);\n\t\t}\n\n\t\tunlock() {\n\t\t\tif (globalThis.Atomics) Atomics.store(this.$lock, 0, 0);\n\t\t}\n\n\t\t/**\n\t\t * Main process\n\t\t *\n\t\t * @param {Float32Array[][]} inputs\n\t\t * @param {Float32Array[][]} outputs\n\t\t * @param {Record<string, Float32Array>} parameters\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tif (this.destroyed) return false;\n\t\t\tconst outputOffset = 1;\n\t\t\tthis.lock();\n\t\t\tObject.entries(this.paramsConfig).forEach(([name, { minValue, maxValue }]) => {\n\t\t\t\tconst raw = parameters[name];\n\t\t\t\tif (name in this.paramsValues) this.paramsValues[name] = raw[raw.length - 1]; // Store to local temporary\n\t\t\t\tif (!this.paramsMapping[name]) return; // No need to output\n\t\t\t\tObject.entries(this.paramsMapping[name]).forEach(([targetName, targetMapping]) => {\n\t\t\t\t\tconst j = this.internalParams.indexOf(targetName);\n\t\t\t\t\tif (j === -1) return;\n\t\t\t\t\tconst intrinsicValue = this.internalParamsMinValues[j]; // Output will be added to target intrinsicValue\n\t\t\t\t\tconst { sourceRange, targetRange } = targetMapping;\n\t\t\t\t\tconst [sMin, sMax] = sourceRange;\n\t\t\t\t\tconst [tMin, tMax] = targetRange;\n\t\t\t\t\tlet out;\n\t\t\t\t\tif (minValue !== tMin || maxValue !== tMax\n\t\t\t\t\t\t\t|| minValue !== sMin || maxValue !== sMax) { // need to calculate with mapping\n\t\t\t\t\t\tout = raw.map((v) => {\n\t\t\t\t\t\t\tconst mappedValue = mapValue(v, minValue, maxValue, sMin, sMax, tMin, tMax);\n\t\t\t\t\t\t\treturn mappedValue - intrinsicValue;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (intrinsicValue) { // need to correct with intrinsicValue\n\t\t\t\t\t\tout = raw.map((v) => v - intrinsicValue);\n\t\t\t\t\t} else { // No need to modify\n\t\t\t\t\t\tout = raw;\n\t\t\t\t\t}\n\t\t\t\t\tif (out.length === 1) outputs[j + outputOffset][0].fill(out[0]);\n\t\t\t\t\telse outputs[j + outputOffset][0].set(out);\n\t\t\t\t\tthis.$internalParamsBuffer[j] = out[0];\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.unlock();\n\t\t\tif (!this.supportSharedArrayBuffer) {\n\t\t\t\tthis.call('setBuffer', { lock: this.$lock, paramsBuffer: this.$internalParamsBuffer });\n\t\t\t}\n\t\t\tconst { currentTime } = audioWorkletGlobalScope;\n\t\t\tlet $event;\n\t\t\tfor ($event = 0; $event < this.eventQueue.length; $event++) {\n\t\t\t\tconst event = this.eventQueue[$event];\n\t\t\t\tif (event.time && event.time > currentTime) break;\n\t\t\t\tif (typeof this.handleEvent === 'function') this.handleEvent(event);\n\t\t\t\tthis.call('dispatchWamEvent', event);\n\t\t\t}\n\t\t\tif ($event) this.eventQueue.splice(0, $event);\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} wamInstanceId\n\t\t * @param {number} [output]\n\t\t */\n\t\tconnectEvents(wamInstanceId, output) {\n\t\t\twebAudioModules.connectEvents(this.groupId, this.instanceId, wamInstanceId, output);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} [wamInstanceId]\n\t\t * @param {number} [output]\n\t\t */\n\t\tdisconnectEvents(wamInstanceId, output) {\n\t\t\tif (typeof wamInstanceId === 'undefined') {\n\t\t\t\twebAudioModules.disconnectEvents(this.groupId, this.instanceId);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twebAudioModules.disconnectEvents(this.groupId, this.instanceId, wamInstanceId, output);\n\t\t}\n\n\t\tdestroy() {\n\t\t\taudioWorkletGlobalScope.webAudioModules.removeWam(this);\n\t\t\tthis.destroyed = true;\n\t\t\tthis.port.close();\n\t\t}\n\t}\n\ttry {\n\t\tregisterProcessor(moduleId, ParamMgrProcessor);\n\t} catch (error) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(error);\n\t}\n};\nexport default processor;\n", "/** @typedef {import('@webaudiomodules/api').WamParameterInfo} IWamParameterInfo */\n/** @typedef {typeof import('@webaudiomodules/api').WamParameterInfo} WamParameterInfoConstructor */\n/** @typedef {import('@webaudiomodules/api').WamParameterType} WamParameterType */\n/** @typedef {import('@webaudiomodules/api').WamParameterConfiguration} WamParameterConfiguration */\n/** @typedef {import('@webaudiomodules/api').AudioWorkletGlobalScope} AudioWorkletGlobalScope */\n/** @typedef {import('./types').WamSDKBaseModuleScope} WamSDKBaseModuleScope */\n\n/**\n * @param {string} [moduleId]\n * @returns {WamParameterInfoConstructor}\n */\nconst getWamParameterInfo = (moduleId) => {\n\t/** @type {AudioWorkletGlobalScope} */\n\t// @ts-ignore\n\tconst audioWorkletGlobalScope = globalThis;\n\n\t/**\n\t * @param {number} x\n\t * @param {number} e\n\t */\n\tconst normExp = (x, e) => (e === 0 ? x : x ** (1.5 ** -e));\n\t\n\t/**\n\t * @param {number} x\n\t * @param {number} e\n\t */\n\tconst denormExp = (x, e) => (e === 0 ? x : x ** (1.5 ** e));\n\t\n\t/**\n\t * @param {number} x\n\t * @param {number} min\n\t * @param {number} max\n\t */\n\tconst normalize = (x, min, max, e = 0) => (\n\t\tmin === 0 && max === 1\n\t\t\t? normExp(x, e)\n\t\t\t: normExp((x - min) / (max - min) || 0, e));\n\t\n\t/**\n\t * @param {any} x\n\t * @param {number} min\n\t * @param {number} max\n\t */\n\tconst denormalize = (x, min, max, e = 0) => (\n\t\tmin === 0 && max === 1\n\t\t\t? denormExp(x, e)\n\t\t\t: denormExp(x, e) * (max - min) + min\n\t);\n\t\n\t/**\n\t * @param {number} x\n\t * @param {number} min\n\t * @param {number} max\n\t */\n\tconst inRange = (x, min, max) => (x >= min && x <= max);\n\t\n\t/**\n\t * @implements {IWamParameterInfo}\n\t */\n\tclass WamParameterInfo {\n\t\t/**\n\t\t * @param {string} id\n\t\t * @param {WamParameterConfiguration} [config]\n\t\t */\n\t\tconstructor(id, config = {}) {\n\t\t\tlet {\n\t\t\t\ttype, label, defaultValue, minValue, maxValue, discreteStep, exponent, choices, units,\n\t\t\t} = config;\n\t\t\tif (type === undefined) type = 'float';\n\t\t\tif (label === undefined) label = '';\n\t\t\tif (defaultValue === undefined) defaultValue = 0;\n\t\t\tif (choices === undefined) choices = [];\n\t\t\tif (type === 'boolean' || type === 'choice') {\n\t\t\t\tdiscreteStep = 1;\n\t\t\t\tminValue = 0;\n\t\t\t\tif (choices.length) maxValue = choices.length - 1;\n\t\t\t\telse maxValue = 1;\n\t\t\t} else {\n\t\t\t\tif (minValue === undefined) minValue = 0;\n\t\t\t\tif (maxValue === undefined) maxValue = 1;\n\t\t\t\tif (discreteStep === undefined) discreteStep = 0;\n\t\t\t\tif (exponent === undefined) exponent = 0;\n\t\t\t\tif (units === undefined) units = '';\n\t\t\t}\n\t\n\t\t\tconst errBase = `Param config error | ${id}: `;\n\t\t\tif (minValue >= maxValue) throw Error(errBase.concat('minValue must be less than maxValue'));\n\t\t\tif (!inRange(defaultValue, minValue, maxValue)) throw Error(errBase.concat('defaultValue out of range'));\n\t\t\tif (discreteStep % 1 || discreteStep < 0) {\n\t\t\t\tthrow Error(errBase.concat('discreteStep must be a non-negative integer'));\n\t\t\t} else if (discreteStep > 0 && (minValue % 1 || maxValue % 1 || defaultValue % 1)) {\n\t\t\t\tthrow Error(errBase.concat('non-zero discreteStep requires integer minValue, maxValue, and defaultValue'));\n\t\t\t}\n\t\t\tif (type === 'choice' && !choices.length) {\n\t\t\t\tthrow Error(errBase.concat('choice type parameter requires list of strings in choices'));\n\t\t\t}\n\t\n\t\t\t/**\n\t\t\t * The parameter's unique identifier.\n\t\t\t * @readonly @type {string}\n\t\t\t */\n\t\t\tthis.id = id;\n\t\n\t\t\t/**\n\t\t\t * The parameter's human-readable name.\n\t\t\t * @readonly @type {string}\n\t\t\t */\n\t\t\tthis.label = label;\n\t\n\t\t\t/**\n\t\t\t * The parameter's data type.\n\t\t\t * @readonly @type {WamParameterType}\n\t\t\t */\n\t\t\tthis.type = type;\n\t\n\t\t\t/**\n\t\t\t * The parameter's default value. Must be\n\t\t\t * within range `[minValue, maxValue]`.\n\t\t\t * @readonly @type {number}\n\t\t\t */\n\t\t\tthis.defaultValue = defaultValue;\n\t\n\t\t\t/**\n\t\t\t * The minimum valid value of the parameter's range.\n\t\t\t * @readonly @type {number}\n\t\t\t */\n\t\t\tthis.minValue = minValue;\n\t\n\t\t\t/**\n\t\t\t * The maximum valid value of the parameter's range.\n\t\t\t * @readonly @type {number}\n\t\t\t */\n\t\t\tthis.maxValue = maxValue;\n\t\n\t\t\t/**\n\t\t\t * The distance between adjacent valid integer\n\t\t\t * values, if applicable.\n\t\t\t * @readonly @type {number}\n\t\t\t */\n\t\t\tthis.discreteStep = discreteStep;\n\t\n\t\t\t/**\n\t\t\t * The nonlinear (exponential) skew of the parameter's\n\t\t\t * range, if applicable.\n\t\t\t *  @readonly @type {number}\n\t\t\t */\n\t\t\tthis.exponent = exponent;\n\t\n\t\t\t/**\n\t\t\t * A list of human-readable choices corresponding to each\n\t\t\t * valid integer value in the parameter's range, if applicable.\n\t\t\t * @readonly @type {string[]}\n\t\t\t */\n\t\t\tthis.choices = choices;\n\t\n\t\t\t/**\n\t\t\t * A human-readable string representing the units of the\n\t\t\t * parameter's range, if applicable.\n\t\t\t * @readonly @type {string}\n\t\t\t */\n\t\t\tthis.units = units;\n\t\t}\n\t\n\t\t/**\n\t\t * Convert a value from the parameter's denormalized range\n\t\t * `[minValue, maxValue]` to normalized range `[0, 1]`.\n\t\t * @param {number} value\n\t\t */\n\t\tnormalize(value) {\n\t\t\treturn normalize(value, this.minValue, this.maxValue, this.exponent);\n\t\t}\n\t\n\t\t/**\n\t\t * Convert a value from normalized range `[0, 1]` to the\n\t\t * parameter's denormalized range `[minValue, maxValue]`.\n\t\t * @param {number} valueNorm\n\t\t */\n\t\tdenormalize(valueNorm) {\n\t\t\treturn denormalize(valueNorm, this.minValue, this.maxValue, this.exponent);\n\t\t}\n\t\n\t\t/**\n\t\t * Get a human-readable string representing the given value,\n\t\t * including units if applicable.\n\t\t * @param {number} value\n\t\t */\n\t\tvalueString(value) {\n\t\t\tif (this.choices) return this.choices[value];\n\t\t\tif (this.units !== '') return `${value} ${this.units}`;\n\t\t\treturn `${value}`;\n\t\t}\n\t}\n\n\tif (audioWorkletGlobalScope.AudioWorkletProcessor) {\n\t\t/** @type {WamSDKBaseModuleScope} */\n\t\tconst ModuleScope = audioWorkletGlobalScope.webAudioModules.getModuleScope(moduleId);\n\t\n\t\tif (!ModuleScope.WamParameterInfo) ModuleScope.WamParameterInfo = WamParameterInfo;\n\t}\n\n\treturn WamParameterInfo;\n};\n\nexport default getWamParameterInfo;\n", "/** @typedef {import('@webaudiomodules/api').WamParameterConfiguration} WamParameterConfiguration */\n/** @typedef {import('@webaudiomodules/api').WamParameterInfoMap} WamParameterInfoMap */\n/** @typedef {import('./types').ParametersMapping} ParametersMapping */\n/** @typedef {import('./types').InternalParametersDescriptor} InternalParametersDescriptor */\n/** @typedef {import('./types').ParametersMappingConfiguratorOptions} ParametersMappingConfiguratorOptions */\n\nimport getWamParameterInfo from './sdk/src/WamParameterInfo.js';\n\nconst WamParameterInfo = getWamParameterInfo();\n\nexport default class ParamMappingConfigurator {\n\t/**\n\t * @param {ParametersMappingConfiguratorOptions} [options = {}]\n\t */\n\tconstructor(options = {}) {\n\t\tconst { paramsConfig, paramsMapping, internalParamsConfig } = options;\n\t\tthis._paramsConfig = paramsConfig;\n\t\tthis._paramsMapping = paramsMapping;\n\t\tthis._internalParamsConfig = internalParamsConfig;\n\t}\n\n\t/**\n\t * @private\n\t * @type {Record<string, WamParameterConfiguration>}\n\t */\n\t_paramsConfig = undefined;\n\n\t/**\n\t * Auto-completed `paramsConfig`:\n\t *\n\t * if no `paramsConfig` is defined while initializing, this will be be filled from the internalParamsConfig;\n\t *\n\t * if a parameter is not fully configured, the incompleted properties will have the same value as in the internalParamsConfig.\n\t *\n\t * @type {WamParameterInfoMap}\n\t */\n\tget paramsConfig() {\n\t\tconst { internalParamsConfig } = this;\n\t\treturn Object.entries(this._paramsConfig || internalParamsConfig)\n\t\t\t.reduce((configs, [id, config]) => {\n\t\t\t\tconst internalParam = internalParamsConfig[id];\n\t\t\t\tconfigs[id] = new WamParameterInfo(id, {\n\t\t\t\t\t...config,\n\t\t\t\t\tlabel: config.label ?? id,\n\t\t\t\t\tdefaultValue: config.defaultValue ?? internalParam?.defaultValue,\n\t\t\t\t\tminValue: config.minValue ?? internalParam?.minValue,\n\t\t\t\t\tmaxValue: config.maxValue ?? internalParam?.maxValue,\n\t\t\t\t});\n\t\t\t\treturn configs;\n\t\t\t}, {});\n\t}\n\n\t/**\n\t * @private\n\t * @type {InternalParametersDescriptor}\n\t */\n\t_internalParamsConfig = undefined;\n\n\t/**\n\t * Auto-completed configuration of the `internalParamsConfig`\n\t *\n\t * Internal Parameters Config contains all the automatable parameters' information.\n\t *\n\t * An automatable parameter could be a `WebAudio` `AudioParam`\n\t * or a config with an `onChange` callback that will be called while the value has been changed.\n\t *\n\t * @type {InternalParametersDescriptor}\n\t */\n\tget internalParamsConfig() {\n\t\treturn Object.entries(this._internalParamsConfig || {})\n\t\t\t.reduce((configs, [name, config]) => {\n\t\t\t\tif (config instanceof AudioParam) configs[name] = config;\n\t\t\t\telse {\n\t\t\t\t\tconst defaultConfig = {\n\t\t\t\t\t\tminValue: 0,\n\t\t\t\t\t\tmaxValue: 1,\n\t\t\t\t\t\tdefaultValue: 0,\n\t\t\t\t\t\tautomationRate: 30,\n\t\t\t\t\t};\n\t\t\t\t\tconfigs[name] = { ...defaultConfig, ...config };\n\t\t\t\t}\n\t\t\t\treturn configs;\n\t\t\t}, {});\n\t}\n\n\t/**\n\t * @private\n\t * @type {ParametersMapping}\n\t */\n\t_paramsMapping = {}\n\n\t/**\n\t * Auto-completed `paramsMapping`,\n\t * the mapping can be omitted while initialized,\n\t * but is useful when an exposed param (in the `paramsConfig`) should automate\n\t * several internal params (in the `internalParamsConfig`) or has a different range there.\n\t *\n\t * If a parameter is present in both `paramsConfig` and `internalParamsConfig` (or the `paramsConfig` is not configured),\n\t * a map of this parameter will be there automatically, if not declared explicitly.\n\t *\n\t * @type {ParametersMapping}\n\t */\n\tget paramsMapping() {\n\t\tconst declared = this._paramsMapping || {};\n\t\tconst externalParams = this.paramsConfig;\n\t\tconst internalParams = this.internalParamsConfig;\n\t\treturn Object.entries(externalParams)\n\t\t\t.reduce((mapping, [name, { minValue, maxValue }]) => {\n\t\t\t\tconst sourceRange = [minValue, maxValue];\n\t\t\t\tconst defaultMapping = { sourceRange, targetRange: [...sourceRange] };\n\t\t\t\tif (declared[name]) {\n\t\t\t\t\tconst declaredTargets = Object.entries(declared[name])\n\t\t\t\t\t\t.reduce((targets, [targetName, targetMapping]) => {\n\t\t\t\t\t\t\tif (internalParams[targetName]) {\n\t\t\t\t\t\t\t\ttargets[targetName] = { ...defaultMapping, ...targetMapping };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn targets;\n\t\t\t\t\t\t}, {});\n\t\t\t\t\tmapping[name] = declaredTargets;\n\t\t\t\t} else if (internalParams[name]) {\n\t\t\t\t\tmapping[name] = { [name]: { ...defaultMapping } };\n\t\t\t\t}\n\t\t\t\treturn mapping;\n\t\t\t}, {});\n\t}\n}\n", "/** @typedef {import('@webaudiomodules/api').WamParameter} WamParameter */\n/** @typedef {import('@webaudiomodules/api').WamParameterInfo} WamParameterInfo */\n\n/**\n * @extends {AudioParam}\n * @implements {WamParameter}\n */\nexport default class MgrAudioParam extends AudioParam {\n\tget exponent() {\n\t\treturn this.info.exponent;\n\t}\n\n\t/**\n\t * @type {WamParameterInfo}\n\t */\n\t_info = undefined;\n\n\tget info() {\n\t\treturn this._info;\n\t}\n\n\tset info(info) {\n\t\tthis._info = info;\n\t}\n\n\tset normalizedValue(valueIn) {\n\t\tthis.value = this.info.denormalize(valueIn);\n\t}\n\n\tget normalizedValue() {\n\t\treturn this.info.normalize(this.value);\n\t}\n\n\tsetValueAtTime(value, startTime) {\n\t\treturn super.setValueAtTime(value, startTime);\n\t}\n\n\tsetNormalizedValueAtTime(valueIn, startTime) {\n\t\tconst value = this.info.denormalize(valueIn);\n\t\treturn this.setValueAtTime(value, startTime);\n\t}\n\n\tlinearRampToValueAtTime(value, endTime) {\n\t\treturn super.linearRampToValueAtTime(value, endTime);\n\t}\n\n\tlinearRampToNormalizedValueAtTime(valueIn, endTime) {\n\t\tconst value = this.info.denormalize(valueIn);\n\t\treturn this.linearRampToValueAtTime(value, endTime);\n\t}\n\n\texponentialRampToValueAtTime(value, endTime) {\n\t\treturn super.exponentialRampToValueAtTime(value, endTime);\n\t}\n\n\texponentialRampToNormalizedValueAtTime(valueIn, endTime) {\n\t\tconst value = this.info.denormalize(valueIn);\n\t\treturn this.exponentialRampToValueAtTime(value, endTime);\n\t}\n\n\tsetTargetAtTime(target, startTime, timeConstant) {\n\t\treturn super.setTargetAtTime(target, startTime, timeConstant);\n\t}\n\n\tsetNormalizedTargetAtTime(targetIn, startTime, timeConstant) {\n\t\tconst target = this.info.denormalize(targetIn);\n\t\treturn this.setTargetAtTime(target, startTime, timeConstant);\n\t}\n\n\tsetValueCurveAtTime(values, startTime, duration) {\n\t\treturn super.setValueCurveAtTime(values, startTime, duration);\n\t}\n\n\tsetNormalizedValueCurveAtTime(valuesIn, startTime, duration) {\n\t\tconst values = Array.from(valuesIn).map((v) => this.info.denormalize(v));\n\t\treturn this.setValueCurveAtTime(values, startTime, duration);\n\t}\n\n\tcancelScheduledParamValues(cancelTime) {\n\t\treturn super.cancelScheduledValues(cancelTime);\n\t}\n\n\tcancelAndHoldParamAtTime(cancelTime) {\n\t\treturn super.cancelAndHoldAtTime(cancelTime);\n\t}\n}\n", "import MgrAudioParam from './MgrAudioParam.js';\n\n/** @typedef {import('@webaudiomodules/api').WebAudioModule} WebAudioModule */\n/** @typedef {import('@webaudiomodules/api').WamNode} WamNode */\n/** @typedef {import('@webaudiomodules/api').WamParameterDataMap} WamParameterValueMap */\n/** @typedef {import('@webaudiomodules/api').WamEvent} WamEvent */\n/** @typedef {import('@webaudiomodules/api').WamAutomationEvent} WamAutomationEvent */\n/** @typedef {import('./types').ParamMgrOptions} ParamMgrOptions */\n/** @typedef {import('./types').ParamMgrCallFromProcessor} ParamMgrCallFromProcessor */\n/** @typedef {import('./types').ParamMgrCallToProcessor} ParamMgrCallToProcessor */\n/** @typedef {import('./types').ParamMgrNodeMsgIn} ParamMgrNodeMsgIn */\n/** @typedef {import('./types').ParamMgrNodeMsgOut} ParamMgrNodeMsgOut */\n/** @typedef {import('./types').ParamMgrNode} IParamMgrNode */\n\n/** @type {typeof import('./TypedAudioWorklet').TypedAudioWorkletNode} */\n// @ts-ignore\nconst AudioWorkletNode = globalThis.AudioWorkletNode;\n\n/**\n * @extends {AudioWorkletNode<ParamMgrNodeMsgIn, ParamMgrNodeMsgOut>}\n * @implements {IParamMgrNode}\n */\nexport default class ParamMgrNode extends AudioWorkletNode {\n\t/**\n     * @param {WebAudioModule} module\n     * @param {ParamMgrOptions} options\n     */\n\tconstructor(module, options) {\n\t\tsuper(module.audioContext, module.moduleId, {\n\t\t\tnumberOfInputs: 0,\n\t\t\tnumberOfOutputs: 1 + options.processorOptions.internalParams.length,\n\t\t\tparameterData: options.parameterData,\n\t\t\tprocessorOptions: options.processorOptions,\n\t\t});\n\t\tconst { processorOptions, internalParamsConfig } = options;\n\t\tthis.initialized = false;\n\t\tthis.module = module;\n\t\tthis.paramsConfig = processorOptions.paramsConfig;\n\t\tthis.internalParams = processorOptions.internalParams;\n\t\tthis.internalParamsConfig = internalParamsConfig;\n\t\tthis.$prevParamsBuffer = new Float32Array(this.internalParams.length);\n\t\tthis.paramsUpdateCheckFn = [];\n\t\tthis.paramsUpdateCheckFnRef = [];\n\t\tthis.messageRequestId = 0;\n\n\t\tObject.entries(this.getParams()).forEach(([name, param]) => {\n\t\t\tObject.setPrototypeOf(param, MgrAudioParam.prototype);\n\t\t\tparam._info = this.paramsConfig[name];\n\t\t});\n\n\t\t/** @type {Record<number, ((...args: any[]) => any)>} */\n\t\tconst resolves = {};\n\t\t/** @type {Record<number, ((...args: any[]) => any)>} */\n\t\tconst rejects = {};\n\t\t/**\n\t\t * @param {keyof ParamMgrCallToProcessor} call\n\t\t * @param {any} args\n\t\t */\n\t\tthis.call = (call, ...args) => {\n\t\t\tconst id = this.messageRequestId;\n\t\t\tthis.messageRequestId += 1;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tresolves[id] = resolve;\n\t\t\t\trejects[id] = reject;\n\t\t\t\tthis.port.postMessage({ id, call, args });\n\t\t\t});\n\t\t};\n\t\tthis.handleMessage = ({ data }) => {\n\t\t\tconst { id, call, args, value, error } = data;\n\t\t\tif (call) {\n\t\t\t\t/** @type {any} */\n\t\t\t\tconst r = { id };\n\t\t\t\ttry {\n\t\t\t\t\tr.value = this[call](...args);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tr.error = e;\n\t\t\t\t}\n\t\t\t\tthis.port.postMessage(r);\n\t\t\t} else {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (rejects[id]) rejects[id](error);\n\t\t\t\t\tdelete rejects[id];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (resolves[id]) {\n\t\t\t\t\tresolves[id](value);\n\t\t\t\t\tdelete resolves[id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.port.start();\n\t\tthis.port.addEventListener('message', this.handleMessage);\n\t}\n\n\t/**\n\t * @returns {ReadonlyMap<string, MgrAudioParam>}\n\t */\n\tget parameters() {\n\t\t// @ts-ignore\n\t\treturn super.parameters;\n\t}\n\n\tget groupId() {\n\t\treturn this.module.groupId;\n\t}\n\n\tget moduleId() {\n\t\treturn this.module.moduleId;\n\t}\n\n\tget instanceId() {\n\t\treturn this.module.instanceId;\n\t}\n\n\tasync initialize() {\n\t\t/** @type {ReturnType<ParamMgrCallToProcessor['getBuffer']>} */\n\t\tconst response = await this.call('getBuffer');\n\t\tconst { lock, paramsBuffer } = response;\n\t\tthis.$lock = lock;\n\t\tthis.$paramsBuffer = paramsBuffer;\n\t\tconst offset = 1;\n\t\tObject.entries(this.internalParamsConfig).forEach(([name, config], i) => {\n\t\t\tif (this.context.state === 'suspended') this.$paramsBuffer[i] = config.defaultValue;\n\t\t\tif (config instanceof AudioParam) {\n\t\t\t\ttry {\n\t\t\t\t\tconfig.automationRate = 'a-rate';\n\t\t\t\t// eslint-disable-next-line no-empty\n\t\t\t\t} catch {\n\t\t\t\t} finally {\n\t\t\t\t\tconfig.value = Math.max(0, config.minValue);\n\t\t\t\t\tthis.connect(config, offset + i);\n\t\t\t\t}\n\t\t\t} else if (config instanceof AudioNode) {\n\t\t\t\tthis.connect(config, offset + i);\n\t\t\t} else {\n\t\t\t\tthis.requestDispatchIParamChange(name);\n\t\t\t}\n\t\t});\n\t\tthis.connect(this.module.audioContext.destination, 0, 0);\n\t\tthis.initialized = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {ReturnType<ParamMgrCallToProcessor['getBuffer']>} buffer\n\t */\n\tsetBuffer({ lock, paramsBuffer }) {\n\t\tthis.$lock = lock;\n\t\tthis.$paramsBuffer = paramsBuffer;\n\t}\n\n\tsetParamsMapping(paramsMapping) {\n\t\treturn this.call('setParamsMapping', paramsMapping);\n\t}\n\n\tgetCompensationDelay() {\n\t\treturn this.call('getCompensationDelay');\n\t}\n\n\tgetParameterInfo(...parameterIdQuery) {\n\t\treturn this.call('getParameterInfo', ...parameterIdQuery);\n\t}\n\n\tgetParameterValues(normalized, ...parameterIdQuery) {\n\t\treturn this.call('getParameterValues', normalized, ...parameterIdQuery);\n\t}\n\n\t/**\n\t * @param {WamAutomationEvent} event\n\t */\n\tscheduleAutomation(event) {\n\t\tconst time = event.time || this.context.currentTime;\n\t\tconst { id, normalized, value } = event.data;\n\t\tconst audioParam = this.getParam(id);\n\t\tif (!audioParam) return;\n\t\tif (audioParam.info.type === 'float') {\n\t\t\tif (normalized) audioParam.linearRampToNormalizedValueAtTime(value, time);\n\t\t\telse audioParam.linearRampToValueAtTime(value, time);\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-lonely-if\n\t\t\tif (normalized) audioParam.setNormalizedValueAtTime(value, time);\n\t\t\telse audioParam.setValueAtTime(value, time);\n\t\t}\n\t}\n\n\t/**\n\t * @param {WamEvent[]} events\n\t */\n\tscheduleEvents(...events) {\n\t\tevents.forEach((event) => {\n\t\t\tif (event.type === 'wam-automation') {\n\t\t\t\tthis.scheduleAutomation(event);\n\t\t\t}\n\t\t});\n\t\tthis.call('scheduleEvents', ...events);\n\t}\n\n\t/**\n\t * @param {WamEvent[]} events\n\t */\n\temitEvents(...events) {\n\t\tthis.call('emitEvents', ...events);\n\t}\n\n\tclearEvents() {\n\t\tthis.call('clearEvents');\n\t}\n\n\t/**\n\t * @param {WamEvent} event\n\t */\n\tdispatchWamEvent(event) {\n\t\tif (event.type === 'wam-automation') {\n\t\t\tthis.scheduleAutomation(event);\n\t\t} else {\n\t\t\tthis.dispatchEvent(new CustomEvent(event.type, { detail: event }));\n\t\t}\n\t}\n\n\t/**\n\t * @param {WamParameterValueMap} parameterValues\n\t */\n\tasync setParameterValues(parameterValues) {\n\t\tObject.keys(parameterValues).forEach((parameterId) => {\n\t\t\tconst parameterUpdate = parameterValues[parameterId];\n\t\t\tconst parameter = this.parameters.get(parameterId);\n\t\t\tif (!parameter) return;\n\t\t\tif (!parameterUpdate.normalized) parameter.value = parameterUpdate.value;\n\t\t\telse parameter.normalizedValue = parameterUpdate.value;\n\t\t});\n\t}\n\n\tasync getState() {\n\t\treturn this.getParamsValues();\n\t}\n\n\tasync setState(state) {\n\t\tthis.setParamsValues(state);\n\t}\n\n\tconvertTimeToFrame(time) {\n\t\treturn Math.round(time * this.context.sampleRate);\n\t}\n\n\tconvertFrameToTime(frame) {\n\t\treturn frame / this.context.sampleRate;\n\t}\n\n\t/**\n\t * @param {string} name\n\t */\n\trequestDispatchIParamChange = (name) => {\n\t\tconst config = this.internalParamsConfig[name];\n\t\tif (!('onChange' in config)) return;\n\t\tconst { automationRate, onChange } = config;\n\t\tif (typeof automationRate !== 'number' || !automationRate) return;\n\t\tconst interval = 1000 / automationRate;\n\t\tconst i = this.internalParams.indexOf(name);\n\t\tif (i === -1) return;\n\t\tif (i >= this.internalParams.length) return;\n\t\tif (typeof this.paramsUpdateCheckFnRef[i] === 'number') {\n\t\t\twindow.clearTimeout(this.paramsUpdateCheckFnRef[i]);\n\t\t}\n\n\t\tthis.paramsUpdateCheckFn[i] = () => {\n\t\t\tconst prev = this.$prevParamsBuffer[i];\n\t\t\tconst cur = this.$paramsBuffer[i];\n\t\t\tif (cur !== prev) {\n\t\t\t\tonChange(cur, prev);\n\t\t\t\tthis.$prevParamsBuffer[i] = cur;\n\t\t\t}\n\t\t\tthis.paramsUpdateCheckFnRef[i] = window.setTimeout(this.paramsUpdateCheckFn[i], interval);\n\t\t};\n\t\tthis.paramsUpdateCheckFn[i]();\n\t}\n\n\t/**\n\t * @param {string} name\n\t */\n\tgetIParamIndex(name) {\n\t\tconst i = this.internalParams.indexOf(name);\n\t\treturn i === -1 ? null : i;\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @param {AudioParam | AudioNode} dest\n\t * @param {number} index\n\t */\n\tconnectIParam(name, dest, index) {\n\t\tconst offset = 1;\n\t\tconst i = this.getIParamIndex(name);\n\t\tif (i !== null) {\n\t\t\tif (dest instanceof AudioNode) {\n\t\t\t\tif (typeof index === 'number') this.connect(dest, offset + i, index);\n\t\t\t\telse this.connect(dest, offset + i);\n\t\t\t} else {\n\t\t\t\tthis.connect(dest, offset + i);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name\n\t * @param {AudioParam | AudioNode} dest\n\t * @param {number} index\n\t */\n\tdisconnectIParam(name, dest, index) {\n\t\tconst offset = 1;\n\t\tconst i = this.getIParamIndex(name);\n\t\tif (i !== null) {\n\t\t\tif (dest instanceof AudioNode) {\n\t\t\t\tif (typeof index === 'number') this.disconnect(dest, offset + i, index);\n\t\t\t\telse this.disconnect(dest, offset + i);\n\t\t\t} else {\n\t\t\t\tthis.disconnect(dest, offset + i);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetIParamValue(name) {\n\t\tconst i = this.getIParamIndex(name);\n\t\treturn i !== null ? this.$paramsBuffer[i] : null;\n\t}\n\n\tgetIParamsValues() {\n\t\t/** @type {Record<string, number>} */\n\t\tconst values = {};\n\t\tthis.internalParams.forEach((name, i) => {\n\t\t\tvalues[name] = this.$paramsBuffer[i];\n\t\t});\n\t\treturn values;\n\t}\n\n\tgetParam(name) {\n\t\treturn this.parameters.get(name) || null;\n\t}\n\n\tgetParams() {\n\t\t// @ts-ignore\n\t\treturn Object.fromEntries(this.parameters);\n\t}\n\n\tgetParamValue(name) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.value;\n\t}\n\n\tsetParamValue(name, value) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return;\n\t\tparam.value = value;\n\t}\n\n\tgetParamsValues() {\n\t\t/** @type {Record<string, number>} */\n\t\tconst values = {};\n\t\tthis.parameters.forEach((v, k) => {\n\t\t\tvalues[k] = v.value;\n\t\t});\n\t\treturn values;\n\t}\n\n\t/**\n\t * @param {Record<string, number>} values\n\t */\n\tsetParamsValues(values) {\n\t\tif (!values) return;\n\t\tObject.entries(values).forEach(([k, v]) => {\n\t\t\tthis.setParamValue(k, v);\n\t\t});\n\t}\n\n\tgetNormalizedParamValue(name) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.normalizedValue;\n\t}\n\n\tsetNormalizedParamValue(name, value) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return;\n\t\tparam.normalizedValue = value;\n\t}\n\n\tgetNormalizedParamsValues() {\n\t\tconst values = {};\n\t\tthis.parameters.forEach((v, k) => {\n\t\t\tvalues[k] = this.getNormalizedParamValue(k);\n\t\t});\n\t\treturn values;\n\t}\n\n\tsetNormalizedParamsValues(values) {\n\t\tif (!values) return;\n\t\tObject.entries(values).forEach(([k, v]) => {\n\t\t\tthis.setNormalizedParamValue(k, v);\n\t\t});\n\t}\n\n\tsetParamValueAtTime(name, value, startTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.setValueAtTime(value, startTime);\n\t}\n\n\tsetNormalizedParamValueAtTime(name, value, startTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.setNormalizedValueAtTime(value, startTime);\n\t}\n\n\tlinearRampToParamValueAtTime(name, value, endTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.linearRampToValueAtTime(value, endTime);\n\t}\n\n\tlinearRampToNormalizedParamValueAtTime(name, value, endTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.linearRampToNormalizedValueAtTime(value, endTime);\n\t}\n\n\texponentialRampToParamValueAtTime(name, value, endTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.exponentialRampToValueAtTime(value, endTime);\n\t}\n\n\texponentialRampToNormalizedParamValueAtTime(name, value, endTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.exponentialRampToNormalizedValueAtTime(value, endTime);\n\t}\n\n\tsetParamTargetAtTime(name, target, startTime, timeConstant) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.setTargetAtTime(target, startTime, timeConstant);\n\t}\n\n\tsetNormalizedParamTargetAtTime(name, target, startTime, timeConstant) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.setNormalizedTargetAtTime(target, startTime, timeConstant);\n\t}\n\n\tsetParamValueCurveAtTime(name, values, startTime, duration) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.setValueCurveAtTime(values, startTime, duration);\n\t}\n\n\tsetNormalizedParamValueCurveAtTime(name, values, startTime, duration) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.setNormalizedValueCurveAtTime(values, startTime, duration);\n\t}\n\n\tcancelScheduledParamValues(name, cancelTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.cancelScheduledValues(cancelTime);\n\t}\n\n\tcancelAndHoldParamAtTime(name, cancelTime) {\n\t\tconst param = this.parameters.get(name);\n\t\tif (!param) return null;\n\t\treturn param.cancelAndHoldAtTime(cancelTime);\n\t}\n\n\t/**\n\t * @param {string} toId\n\t * @param {number} [output]\n\t */\n\tconnectEvents(toId, output) {\n\t\tthis.call('connectEvents', toId, output);\n\t}\n\n\t/**\n\t * @param {string} [toId]\n\t * @param {number} [output]\n\t */\n\tdisconnectEvents(toId, output) {\n\t\tthis.call('disconnectEvents', toId, output);\n\t}\n\n\tasync destroy() {\n\t\tthis.disconnect();\n\t\tthis.paramsUpdateCheckFnRef.forEach((ref) => {\n\t\t\tif (typeof ref === 'number') window.clearTimeout(ref);\n\t\t});\n\t\tawait this.call('destroy');\n\t\tthis.port.close();\n\t}\n}\n", "import addFunctionModule from './sdk/src/addFunctionModule.js';\nimport processor from './ParamMgrProcessor.js';\nimport ParamMappingConfigurator from './ParamConfigurator.js';\nimport ParamMgrNode from './ParamMgrNode.js';\n/** @typedef {import('@webaudiomodules/api').WebAudioModule} WebAudioModule */\n/** @typedef {import('./types').ParametersMappingConfiguratorOptions} ParametersMappingConfiguratorOptions */\n/** @typedef {import('./types').ParamMgrOptions} ParamMgrOptions */\n/** @typedef {import('./types').AudioWorkletRegister} AudioWorkletRegister */\n\nexport default class ParamMgrFactory {\n\t/**\n\t * @param {WebAudioModule} module\n\t * @param {ParametersMappingConfiguratorOptions} [optionsIn = {}]\n\t */\n\tstatic async create(module, optionsIn = {}) {\n\t\tconst { audioContext, groupId, moduleId, instanceId } = module;\n\t\tconst { paramsConfig, paramsMapping, internalParamsConfig } = new ParamMappingConfigurator(optionsIn);\n\t\tconst initialParamsValue = Object.entries(paramsConfig)\n\t\t\t.reduce((currentParams, [name, { defaultValue }]) => {\n\t\t\t\tcurrentParams[name] = defaultValue;\n\t\t\t\treturn currentParams;\n\t\t\t}, {});\n\t\tconst serializableParamsConfig = Object.entries(paramsConfig)\n\t\t\t.reduce((currentParams, [name, { id, label, type, defaultValue, minValue, maxValue, discreteStep, exponent, choices, units }]) => {\n\t\t\t\tcurrentParams[name] = { id, label, type, defaultValue, minValue, maxValue, discreteStep, exponent, choices, units };\n\t\t\t\treturn currentParams;\n\t\t\t}, {});\n\t\tawait addFunctionModule(audioContext.audioWorklet, processor, moduleId, serializableParamsConfig);\n\t\t/** @type {ParamMgrOptions} */\n\t\tconst options = {\n\t\t\tinternalParamsConfig,\n\t\t\tparameterData: initialParamsValue,\n\t\t\tprocessorOptions: {\n\t\t\t\tparamsConfig,\n\t\t\t\tparamsMapping,\n\t\t\t\tinternalParamsMinValues: Object.values(internalParamsConfig)\n\t\t\t\t\t.map((config) => Math.max(0, config?.minValue || 0)),\n\t\t\t\tinternalParams: Object.keys(internalParamsConfig),\n\t\t\t\tgroupId,\n\t\t\t\tinstanceId,\n\t\t\t\tmoduleId,\n\t\t\t},\n\t\t};\n\t\tconst node = new ParamMgrNode(module, options);\n\t\tawait node.initialize();\n\t\treturn node;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAMA,uCAAgD,SAAS;AAAA,EAAzD,cANA;AAMA;AA0GC;AAKA;AAAA;AAAA,MA9GI,UAAU;AACb,WAAO,KAAK,SAAS;AAAA;AAAA,MAGlB,WAAW;AACd,WAAO,KAAK,SAAS;AAAA;AAAA,MAGlB,aAAa;AAChB,WAAO,KAAK,SAAS;AAAA;AAAA,MAGlB,SAAS;AACZ,WAAO,KAAK,SAAS;AAAA;AAAA,EAMtB,oBAAoB,MAAM;AACzB,WAAO,KAAK,SAAS,iBAAiB,GAAG;AAAA;AAAA,EAM1C,uBAAuB,MAAM;AAC5B,WAAO,KAAK,SAAS,oBAAoB,GAAG;AAAA;AAAA,EAM1C,iBAAiB,MAAM;AACzB,WAAO,KAAK,SAAS,cAAc,GAAG;AAAA;AAAA,EAMvC,oBAAoB,MAAM;AACzB,WAAO,KAAK,SAAS,iBAAiB,GAAG;AAAA;AAAA,EAM1C,sBAAsB,MAAM;AAC3B,WAAO,KAAK,SAAS,mBAAmB,GAAG;AAAA;AAAA,EAM5C,sBAAsB,MAAM;AAC3B,WAAO,KAAK,SAAS,mBAAmB,GAAG;AAAA;AAAA,EAG5C,WAAW;AACV,WAAO,KAAK,SAAS;AAAA;AAAA,EAMtB,YAAY,MAAM;AACjB,WAAO,KAAK,SAAS,SAAS,GAAG;AAAA;AAAA,EAGlC,uBAAuB;AACtB,WAAO,KAAK,SAAS;AAAA;AAAA,EAMtB,kBAAkB,MAAM;AACvB,WAAO,KAAK,SAAS,eAAe,GAAG;AAAA;AAAA,EAGxC,cAAc;AACb,WAAO,KAAK,SAAS;AAAA;AAAA,EAMtB,iBAAiB,MAAM;AACtB,WAAO,KAAK,SAAS,cAAc,GAAG;AAAA;AAAA,EAMvC,oBAAoB,MAAM;AACzB,WAAO,KAAK,SAAS,iBAAiB,GAAG;AAAA;AAAA,EAG1C,UAAU;AACT,WAAO,KAAK,SAAS;AAAA;AAAA,MAalB,aAAa,OAAO;AACvB,QAAI,KAAK;AAAS,WAAK,QAAQ,eAAe;AAAA;AACzC,YAAM,eAAe;AAAA;AAAA,MAGvB,eAAe;AAClB,QAAI,KAAK;AAAS,aAAO,KAAK,QAAQ;AACtC,WAAO,MAAM;AAAA;AAAA,MAGV,iBAAiB,MAAM;AAC1B,QAAI,KAAK;AAAS,WAAK,QAAQ,mBAAmB;AAAA;AAC7C,YAAM,mBAAmB;AAAA;AAAA,MAG3B,mBAAmB;AACtB,QAAI,KAAK;AAAS,aAAO,KAAK,QAAQ;AACtC,WAAO,MAAM;AAAA;AAAA,MAGV,sBAAsB,gBAAgB;AACzC,QAAI,KAAK;AAAS,WAAK,QAAQ,wBAAwB;AAAA;AAClD,YAAM,wBAAwB;AAAA;AAAA,MAGhC,wBAAwB;AAC3B,QAAI,KAAK;AAAS,aAAO,KAAK,QAAQ;AACtC,WAAO,MAAM;AAAA;AAAA,MAGV,iBAAiB;AACpB,WAAO,MAAM;AAAA;AAAA,MAGV,kBAAkB;AACrB,QAAI,KAAK;AAAS,aAAO,KAAK,QAAQ;AACtC,WAAO,MAAM;AAAA;AAAA,MAGV,OAAO;AACV,WAAO;AAAA;AAAA,EAGR,WAAW,MAAM;AAEhB,QAAI,KAAK,WAAW,KAAK,YAAY;AAAM,aAAO,KAAK,QAAQ,QAAQ,GAAG;AAE1E,WAAO,MAAM,QAAQ,GAAG;AAAA;AAAA,EAGzB,cAAc,MAAM;AAEnB,QAAI,KAAK,WAAW,KAAK,YAAY;AAAM,aAAO,KAAK,QAAQ,WAAW,GAAG;AAE7E,WAAO,MAAM,WAAW,GAAG;AAAA;AAAA;;;ACrK7B,IAAM,oBAAoB,CAAC,cAAc,sBAAsB,cAAc;AACzE,QAAM,OAAO,IAAI,kBAAkB,eAAe,UAAU,IAAI,CAAC,MAAM,KAAK,UAAU,IAAI,KAAK;AAC/F,QAAM,MAAM,IAAI,gBAAgB,IAAI,KAAK,CAAC,OAAO,EAAE,MAAM;AACzD,SAAO,aAAa,UAAU;AAAA;AAGlC,IAAO,4BAAQ;;;ACMf,IAAM,YAAY,CAAC,UAAU,iBAAiB;AAG7C,QAAM,0BAA0B;AAChC,QAAM;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,MACG;AAEJ,QAAM,2BAA2B,CAAC,CAAC,WAAW;AAC9C,QAAM,oBAAoB,WAAW,qBAAqB,WAAW;AACrE,QAAM,UAAU,CAAC,GAAG,MAAO,MAAM,IAAI,IAAI,KAAM,OAAO,CAAC;AACvD,QAAM,aAAa,CAAC,GAAG,KAAK,KAAK,IAAI,MACpC,QAAQ,KAAK,QAAQ,IAClB,QAAQ,GAAG,KACX,QAAS,KAAI,OAAQ,OAAM,QAAQ,GAAG;AAC1C,QAAM,YAAY,CAAC,GAAG,KAAK,QAAS,QAAQ,KAAK,QAAQ,IAAI,IAAK,KAAI,OAAQ,OAAM,QAAQ;AAC5F,QAAM,cAAc,CAAC,GAAG,KAAK,QAAS,QAAQ,KAAK,QAAQ,IAAI,IAAI,IAAK,OAAM,OAAO;AACrF,QAAM,WAAW,CAAC,GAAG,MAAM,MAAM,MAAM,MAAM,MAAM,SAClD,YACC,UACC,UACC,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,KAC9B,MACA,OAED,UAAU,MAAM,MAAM,OACtB,UAAU,MAAM,MAAM,QAEvB,MACA;AAeF,kCAAgC,sBAAsB;AAAA,eAC1C,uBAAuB;AACjC,aAAO,OAAO,QAAQ,cAAc,IAAI,CAAC,CAAC,MAAM,EAAE,cAAc,UAAU,gBAAiB;AAAA,QAC1F;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAAA,IAOF,YAAY,SAAS;AACpB,YAAM;AACN,WAAK,YAAY;AACjB,WAAK,2BAA2B;AAChC,YAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,UACG,QAAQ;AACZ,WAAK,UAAU;AACf,WAAK,WAAW;AAChB,WAAK,aAAa;AAClB,WAAK,0BAA0B;AAC/B,WAAK,eAAe;AACpB,WAAK,gBAAgB;AAErB,WAAK,eAAe;AACpB,aAAO,QAAQ,cAAc,QAAQ,CAAC,CAAC,MAAM,EAAE,oBAAoB;AAClE,aAAK,aAAa,QAAQ;AAAA;AAE3B,WAAK,iBAAiB;AACtB,WAAK,sBAAsB,KAAK,eAAe;AAC/C,WAAK,SAAS,IAAI,kBAAmB,MAAK,sBAAsB,KAAK,aAAa;AAClF,WAAK,QAAQ,IAAI,WAAW,KAAK,QAAQ,GAAG;AAC5C,WAAK,wBAAwB,IAAI,aAAa,KAAK,QAAQ,GAAG,KAAK;AAEnE,WAAK,aAAa;AAGlB,WAAK,cAAc;AAEnB,8BAAwB,gBAAgB,OAAO;AAE/C,WAAK,uBAAuB;AAE5B,YAAM,WAAW;AAEjB,YAAM,UAAU;AAKhB,WAAK,OAAO,CAAC,SAAS,SAAS,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC/D,cAAM,KAAK,KAAK;AAChB,iBAAS,MAAM;AACf,gBAAQ,MAAM;AACd,aAAK,KAAK,YAAY,EAAE,IAAI,MAAM;AAAA;AAEnC,WAAK,gBAAgB,CAAC,EAAE,WAAW;AAClC,cAAM,EAAE,IAAI,MAAM,MAAM,OAAO,UAAU;AACzC,YAAI,MAAM;AAET,gBAAM,IAAI,EAAE;AACZ,cAAI;AACH,cAAE,QAAQ,KAAK,MAAM,GAAG;AAAA,mBAChB,GAAP;AACD,cAAE,QAAQ;AAAA;AAEX,eAAK,KAAK,YAAY;AAAA,eAChB;AACN,cAAI,OAAO;AACV,gBAAI,QAAQ;AAAK,sBAAQ,IAAI;AAC7B,mBAAO,QAAQ;AACf;AAAA;AAED,cAAI,SAAS,KAAK;AACjB,qBAAS,IAAI;AACb,mBAAO,SAAS;AAAA;AAAA;AAAA;AAInB,WAAK,KAAK;AACV,WAAK,KAAK,iBAAiB,WAAW,KAAK;AAAA;AAAA,IAM5C,iBAAiB,SAAS;AACzB,WAAK,gBAAgB;AAAA;AAAA,IAGtB,YAAY;AACX,aAAO,EAAE,MAAM,KAAK,OAAO,cAAc,KAAK;AAAA;AAAA,IAG/C,uBAAuB;AACtB,aAAO;AAAA;AAAA,IAMR,oBAAoB,kBAAkB;AACrC,UAAI,iBAAiB,WAAW;AAAG,2BAAmB,OAAO,KAAK,KAAK;AAEvE,YAAM,gBAAgB;AACtB,uBAAiB,QAAQ,CAAC,gBAAgB;AACzC,sBAAc,eAAe,KAAK,aAAa;AAAA;AAEhD,aAAO;AAAA;AAAA,IAOR,mBAAmB,eAAe,kBAAkB;AACnD,UAAI,iBAAiB,WAAW;AAAG,2BAAmB,OAAO,KAAK,KAAK;AAEvE,YAAM,kBAAkB;AACxB,uBAAiB,QAAQ,CAAC,gBAAgB;AACzC,YAAI,CAAE,gBAAe,KAAK;AAAe;AACzC,cAAM,EAAE,UAAU,UAAU,aAAa,KAAK,aAAa;AAC3D,cAAM,QAAQ,KAAK,aAAa;AAChC,wBAAgB,eAAe;AAAA,UAC9B,IAAI;AAAA,UACJ,OAAO,aAAa,WAAW,OAAO,UAAU,UAAU,YAAY;AAAA,UACtE;AAAA;AAAA;AAGF,aAAO;AAAA;AAAA,IAMR,kBAAkB,QAAQ;AACzB,WAAK,WAAW,KAAK,GAAG;AACxB,YAAM,EAAE,gBAAgB;AACxB,WAAK,WAAW,KAAK,CAAC,GAAG,MAAO,GAAE,QAAQ,eAAgB,GAAE,QAAQ;AAAA;AAAA,IAMrE,cAAc,QAAQ;AACrB,sBAAgB,WAAW,MAAM,GAAG;AAAA;AAAA,IAGrC,cAAc;AACb,WAAK,aAAa;AAAA;AAAA,IAGnB,OAAO;AACN,UAAI,WAAW;AAAS,gBAAQ,MAAM,KAAK,OAAO,GAAG;AAAA;AAAA,IAGtD,SAAS;AACR,UAAI,WAAW;AAAS,gBAAQ,MAAM,KAAK,OAAO,GAAG;AAAA;AAAA,IAUtD,QAAQ,QAAQ,SAAS,YAAY;AACpC,UAAI,KAAK;AAAW,eAAO;AAC3B,YAAM,eAAe;AACrB,WAAK;AACL,aAAO,QAAQ,KAAK,cAAc,QAAQ,CAAC,CAAC,MAAM,EAAE,UAAU,gBAAgB;AAC7E,cAAM,MAAM,WAAW;AACvB,YAAI,QAAQ,KAAK;AAAc,eAAK,aAAa,QAAQ,IAAI,IAAI,SAAS;AAC1E,YAAI,CAAC,KAAK,cAAc;AAAO;AAC/B,eAAO,QAAQ,KAAK,cAAc,OAAO,QAAQ,CAAC,CAAC,YAAY,mBAAmB;AACjF,gBAAM,IAAI,KAAK,eAAe,QAAQ;AACtC,cAAI,MAAM;AAAI;AACd,gBAAM,iBAAiB,KAAK,wBAAwB;AACpD,gBAAM,EAAE,aAAa,gBAAgB;AACrC,gBAAM,CAAC,MAAM,QAAQ;AACrB,gBAAM,CAAC,MAAM,QAAQ;AACrB,cAAI;AACJ,cAAI,aAAa,QAAQ,aAAa,QACjC,aAAa,QAAQ,aAAa,MAAM;AAC5C,kBAAM,IAAI,IAAI,CAAC,MAAM;AACpB,oBAAM,cAAc,SAAS,GAAG,UAAU,UAAU,MAAM,MAAM,MAAM;AACtE,qBAAO,cAAc;AAAA;AAAA,qBAEZ,gBAAgB;AAC1B,kBAAM,IAAI,IAAI,CAAC,MAAM,IAAI;AAAA,iBACnB;AACN,kBAAM;AAAA;AAEP,cAAI,IAAI,WAAW;AAAG,oBAAQ,IAAI,cAAc,GAAG,KAAK,IAAI;AAAA;AACvD,oBAAQ,IAAI,cAAc,GAAG,IAAI;AACtC,eAAK,sBAAsB,KAAK,IAAI;AAAA;AAAA;AAGtC,WAAK;AACL,UAAI,CAAC,KAAK,0BAA0B;AACnC,aAAK,KAAK,aAAa,EAAE,MAAM,KAAK,OAAO,cAAc,KAAK;AAAA;AAE/D,YAAM,EAAE,gBAAgB;AACxB,UAAI;AACJ,WAAK,SAAS,GAAG,SAAS,KAAK,WAAW,QAAQ,UAAU;AAC3D,cAAM,QAAQ,KAAK,WAAW;AAC9B,YAAI,MAAM,QAAQ,MAAM,OAAO;AAAa;AAC5C,YAAI,OAAO,KAAK,gBAAgB;AAAY,eAAK,YAAY;AAC7D,aAAK,KAAK,oBAAoB;AAAA;AAE/B,UAAI;AAAQ,aAAK,WAAW,OAAO,GAAG;AACtC,aAAO;AAAA;AAAA,IAOR,cAAc,eAAe,QAAQ;AACpC,sBAAgB,cAAc,KAAK,SAAS,KAAK,YAAY,eAAe;AAAA;AAAA,IAO7E,iBAAiB,eAAe,QAAQ;AACvC,UAAI,OAAO,kBAAkB,aAAa;AACzC,wBAAgB,iBAAiB,KAAK,SAAS,KAAK;AACpD;AAAA;AAED,sBAAgB,iBAAiB,KAAK,SAAS,KAAK,YAAY,eAAe;AAAA;AAAA,IAGhF,UAAU;AACT,8BAAwB,gBAAgB,UAAU;AAClD,WAAK,YAAY;AACjB,WAAK,KAAK;AAAA;AAAA;AAGZ,MAAI;AACH,sBAAkB,UAAU;AAAA,WACpB,OAAP;AAED,YAAQ,KAAK;AAAA;AAAA;AAGf,IAAO,4BAAQ;;;ACtTf,IAAM,sBAAsB,CAAC,aAAa;AAGzC,QAAM,0BAA0B;AAMhC,QAAM,UAAU,CAAC,GAAG,MAAO,MAAM,IAAI,IAAI,KAAM,OAAO,CAAC;AAMvD,QAAM,YAAY,CAAC,GAAG,MAAO,MAAM,IAAI,IAAI,KAAM,OAAO;AAOxD,QAAM,YAAY,CAAC,GAAG,KAAK,KAAK,IAAI,MACnC,QAAQ,KAAK,QAAQ,IAClB,QAAQ,GAAG,KACX,QAAS,KAAI,OAAQ,OAAM,QAAQ,GAAG;AAO1C,QAAM,cAAc,CAAC,GAAG,KAAK,KAAK,IAAI,MACrC,QAAQ,KAAK,QAAQ,IAClB,UAAU,GAAG,KACb,UAAU,GAAG,KAAM,OAAM,OAAO;AAQpC,QAAM,UAAU,CAAC,GAAG,KAAK,QAAS,KAAK,OAAO,KAAK;AAKnD,0BAAuB;AAAA,IAKtB,YAAY,IAAI,SAAS,IAAI;AAC5B,UAAI;AAAA,QACH;AAAA,QAAM;AAAA,QAAO;AAAA,QAAc;AAAA,QAAU;AAAA,QAAU;AAAA,QAAc;AAAA,QAAU;AAAA,QAAS;AAAA,UAC7E;AACJ,UAAI,SAAS;AAAW,eAAO;AAC/B,UAAI,UAAU;AAAW,gBAAQ;AACjC,UAAI,iBAAiB;AAAW,uBAAe;AAC/C,UAAI,YAAY;AAAW,kBAAU;AACrC,UAAI,SAAS,aAAa,SAAS,UAAU;AAC5C,uBAAe;AACf,mBAAW;AACX,YAAI,QAAQ;AAAQ,qBAAW,QAAQ,SAAS;AAAA;AAC3C,qBAAW;AAAA,aACV;AACN,YAAI,aAAa;AAAW,qBAAW;AACvC,YAAI,aAAa;AAAW,qBAAW;AACvC,YAAI,iBAAiB;AAAW,yBAAe;AAC/C,YAAI,aAAa;AAAW,qBAAW;AACvC,YAAI,UAAU;AAAW,kBAAQ;AAAA;AAGlC,YAAM,UAAU,wBAAwB;AACxC,UAAI,YAAY;AAAU,cAAM,MAAM,QAAQ,OAAO;AACrD,UAAI,CAAC,QAAQ,cAAc,UAAU;AAAW,cAAM,MAAM,QAAQ,OAAO;AAC3E,UAAI,eAAe,KAAK,eAAe,GAAG;AACzC,cAAM,MAAM,QAAQ,OAAO;AAAA,iBACjB,eAAe,KAAM,YAAW,KAAK,WAAW,KAAK,eAAe,IAAI;AAClF,cAAM,MAAM,QAAQ,OAAO;AAAA;AAE5B,UAAI,SAAS,YAAY,CAAC,QAAQ,QAAQ;AACzC,cAAM,MAAM,QAAQ,OAAO;AAAA;AAO5B,WAAK,KAAK;AAMV,WAAK,QAAQ;AAMb,WAAK,OAAO;AAOZ,WAAK,eAAe;AAMpB,WAAK,WAAW;AAMhB,WAAK,WAAW;AAOhB,WAAK,eAAe;AAOpB,WAAK,WAAW;AAOhB,WAAK,UAAU;AAOf,WAAK,QAAQ;AAAA;AAAA,IAQd,UAAU,OAAO;AAChB,aAAO,UAAU,OAAO,KAAK,UAAU,KAAK,UAAU,KAAK;AAAA;AAAA,IAQ5D,YAAY,WAAW;AACtB,aAAO,YAAY,WAAW,KAAK,UAAU,KAAK,UAAU,KAAK;AAAA;AAAA,IAQlE,YAAY,OAAO;AAClB,UAAI,KAAK;AAAS,eAAO,KAAK,QAAQ;AACtC,UAAI,KAAK,UAAU;AAAI,eAAO,GAAG,SAAS,KAAK;AAC/C,aAAO,GAAG;AAAA;AAAA;AAIZ,MAAI,wBAAwB,uBAAuB;AAElD,UAAM,cAAc,wBAAwB,gBAAgB,eAAe;AAE3E,QAAI,CAAC,YAAY;AAAkB,kBAAY,mBAAmB;AAAA;AAGnE,SAAO;AAAA;AAGR,IAAO,2BAAQ;;;ACnMf,IAAM,mBAAmB;AAEzB,qCAA8C;AAAA,EAI7C,YAAY,UAAU,IAAI;AAW1B;AA+BA;AAiCA,0CAAiB;AA1EhB,UAAM,EAAE,cAAc,eAAe,yBAAyB;AAC9D,SAAK,gBAAgB;AACrB,SAAK,iBAAiB;AACtB,SAAK,wBAAwB;AAAA;AAAA,MAkB1B,eAAe;AAClB,UAAM,EAAE,yBAAyB;AACjC,WAAO,OAAO,QAAQ,KAAK,iBAAiB,sBAC1C,OAAO,CAAC,SAAS,CAAC,IAAI,YAAY;AAvCtC;AAwCI,YAAM,gBAAgB,qBAAqB;AAC3C,cAAQ,MAAM,IAAI,iBAAiB,IAAI,iCACnC,SADmC;AAAA,QAEtC,OAAO,aAAO,UAAP,YAAgB;AAAA,QACvB,cAAc,aAAO,iBAAP,YAAuB,+CAAe;AAAA,QACpD,UAAU,aAAO,aAAP,YAAmB,+CAAe;AAAA,QAC5C,UAAU,aAAO,aAAP,YAAmB,+CAAe;AAAA;AAE7C,aAAO;AAAA,OACL;AAAA;AAAA,MAmBD,uBAAuB;AAC1B,WAAO,OAAO,QAAQ,KAAK,yBAAyB,IAClD,OAAO,CAAC,SAAS,CAAC,MAAM,YAAY;AACpC,UAAI,kBAAkB;AAAY,gBAAQ,QAAQ;AAAA,WAC7C;AACJ,cAAM,gBAAgB;AAAA,UACrB,UAAU;AAAA,UACV,UAAU;AAAA,UACV,cAAc;AAAA,UACd,gBAAgB;AAAA;AAEjB,gBAAQ,QAAQ,kCAAK,gBAAkB;AAAA;AAExC,aAAO;AAAA,OACL;AAAA;AAAA,MAoBD,gBAAgB;AACnB,UAAM,WAAW,KAAK,kBAAkB;AACxC,UAAM,iBAAiB,KAAK;AAC5B,UAAM,iBAAiB,KAAK;AAC5B,WAAO,OAAO,QAAQ,gBACpB,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,gBAAgB;AACpD,YAAM,cAAc,CAAC,UAAU;AAC/B,YAAM,iBAAiB,EAAE,aAAa,aAAa,CAAC,GAAG;AACvD,UAAI,SAAS,OAAO;AACnB,cAAM,kBAAkB,OAAO,QAAQ,SAAS,OAC9C,OAAO,CAAC,SAAS,CAAC,YAAY,mBAAmB;AACjD,cAAI,eAAe,aAAa;AAC/B,oBAAQ,cAAc,kCAAK,iBAAmB;AAAA;AAE/C,iBAAO;AAAA,WACL;AACJ,gBAAQ,QAAQ;AAAA,iBACN,eAAe,OAAO;AAChC,gBAAQ,QAAQ,GAAG,OAAO,mBAAK;AAAA;AAEhC,aAAO;AAAA,OACL;AAAA;AAAA;;;ACpHN,kCAA2C,WAAW;AAAA,EAAtD,cAPA;AAOA;AAQC;AAAA;AAAA,MAPI,WAAW;AACd,WAAO,KAAK,KAAK;AAAA;AAAA,MAQd,OAAO;AACV,WAAO,KAAK;AAAA;AAAA,MAGT,KAAK,MAAM;AACd,SAAK,QAAQ;AAAA;AAAA,MAGV,gBAAgB,SAAS;AAC5B,SAAK,QAAQ,KAAK,KAAK,YAAY;AAAA;AAAA,MAGhC,kBAAkB;AACrB,WAAO,KAAK,KAAK,UAAU,KAAK;AAAA;AAAA,EAGjC,eAAe,OAAO,WAAW;AAChC,WAAO,MAAM,eAAe,OAAO;AAAA;AAAA,EAGpC,yBAAyB,SAAS,WAAW;AAC5C,UAAM,QAAQ,KAAK,KAAK,YAAY;AACpC,WAAO,KAAK,eAAe,OAAO;AAAA;AAAA,EAGnC,wBAAwB,OAAO,SAAS;AACvC,WAAO,MAAM,wBAAwB,OAAO;AAAA;AAAA,EAG7C,kCAAkC,SAAS,SAAS;AACnD,UAAM,QAAQ,KAAK,KAAK,YAAY;AACpC,WAAO,KAAK,wBAAwB,OAAO;AAAA;AAAA,EAG5C,6BAA6B,OAAO,SAAS;AAC5C,WAAO,MAAM,6BAA6B,OAAO;AAAA;AAAA,EAGlD,uCAAuC,SAAS,SAAS;AACxD,UAAM,QAAQ,KAAK,KAAK,YAAY;AACpC,WAAO,KAAK,6BAA6B,OAAO;AAAA;AAAA,EAGjD,gBAAgB,QAAQ,WAAW,cAAc;AAChD,WAAO,MAAM,gBAAgB,QAAQ,WAAW;AAAA;AAAA,EAGjD,0BAA0B,UAAU,WAAW,cAAc;AAC5D,UAAM,SAAS,KAAK,KAAK,YAAY;AACrC,WAAO,KAAK,gBAAgB,QAAQ,WAAW;AAAA;AAAA,EAGhD,oBAAoB,QAAQ,WAAW,UAAU;AAChD,WAAO,MAAM,oBAAoB,QAAQ,WAAW;AAAA;AAAA,EAGrD,8BAA8B,UAAU,WAAW,UAAU;AAC5D,UAAM,SAAS,MAAM,KAAK,UAAU,IAAI,CAAC,MAAM,KAAK,KAAK,YAAY;AACrE,WAAO,KAAK,oBAAoB,QAAQ,WAAW;AAAA;AAAA,EAGpD,2BAA2B,YAAY;AACtC,WAAO,MAAM,sBAAsB;AAAA;AAAA,EAGpC,yBAAyB,YAAY;AACpC,WAAO,MAAM,oBAAoB;AAAA;AAAA;;;ACnEnC,IAAM,mBAAmB,WAAW;AAMpC,iCAA0C,iBAAiB;AAAA,EAK1D,YAAY,QAAQ,SAAS;AAC5B,UAAM,OAAO,cAAc,OAAO,UAAU;AAAA,MAC3C,gBAAgB;AAAA,MAChB,iBAAiB,IAAI,QAAQ,iBAAiB,eAAe;AAAA,MAC7D,eAAe,QAAQ;AAAA,MACvB,kBAAkB,QAAQ;AAAA;AA2N5B,uDAA8B,CAAC,SAAS;AACvC,YAAM,SAAS,KAAK,qBAAqB;AACzC,UAAI,CAAE,eAAc;AAAS;AAC7B,YAAM,EAAE,gBAAgB,aAAa;AACrC,UAAI,OAAO,mBAAmB,YAAY,CAAC;AAAgB;AAC3D,YAAM,WAAW,MAAO;AACxB,YAAM,IAAI,KAAK,eAAe,QAAQ;AACtC,UAAI,MAAM;AAAI;AACd,UAAI,KAAK,KAAK,eAAe;AAAQ;AACrC,UAAI,OAAO,KAAK,uBAAuB,OAAO,UAAU;AACvD,eAAO,aAAa,KAAK,uBAAuB;AAAA;AAGjD,WAAK,oBAAoB,KAAK,MAAM;AACnC,cAAM,OAAO,KAAK,kBAAkB;AACpC,cAAM,MAAM,KAAK,cAAc;AAC/B,YAAI,QAAQ,MAAM;AACjB,mBAAS,KAAK;AACd,eAAK,kBAAkB,KAAK;AAAA;AAE7B,aAAK,uBAAuB,KAAK,OAAO,WAAW,KAAK,oBAAoB,IAAI;AAAA;AAEjF,WAAK,oBAAoB;AAAA;AA/OzB,UAAM,EAAE,kBAAkB,yBAAyB;AACnD,SAAK,cAAc;AACnB,SAAK,SAAS;AACd,SAAK,eAAe,iBAAiB;AACrC,SAAK,iBAAiB,iBAAiB;AACvC,SAAK,uBAAuB;AAC5B,SAAK,oBAAoB,IAAI,aAAa,KAAK,eAAe;AAC9D,SAAK,sBAAsB;AAC3B,SAAK,yBAAyB;AAC9B,SAAK,mBAAmB;AAExB,WAAO,QAAQ,KAAK,aAAa,QAAQ,CAAC,CAAC,MAAM,WAAW;AAC3D,aAAO,eAAe,OAAO,cAAc;AAC3C,YAAM,QAAQ,KAAK,aAAa;AAAA;AAIjC,UAAM,WAAW;AAEjB,UAAM,UAAU;AAKhB,SAAK,OAAO,CAAC,SAAS,SAAS;AAC9B,YAAM,KAAK,KAAK;AAChB,WAAK,oBAAoB;AACzB,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,iBAAS,MAAM;AACf,gBAAQ,MAAM;AACd,aAAK,KAAK,YAAY,EAAE,IAAI,MAAM;AAAA;AAAA;AAGpC,SAAK,gBAAgB,CAAC,EAAE,WAAW;AAClC,YAAM,EAAE,IAAI,MAAM,MAAM,OAAO,UAAU;AACzC,UAAI,MAAM;AAET,cAAM,IAAI,EAAE;AACZ,YAAI;AACH,YAAE,QAAQ,KAAK,MAAM,GAAG;AAAA,iBAChB,GAAP;AACD,YAAE,QAAQ;AAAA;AAEX,aAAK,KAAK,YAAY;AAAA,aAChB;AACN,YAAI,OAAO;AACV,cAAI,QAAQ;AAAK,oBAAQ,IAAI;AAC7B,iBAAO,QAAQ;AACf;AAAA;AAED,YAAI,SAAS,KAAK;AACjB,mBAAS,IAAI;AACb,iBAAO,SAAS;AAAA;AAAA;AAAA;AAInB,SAAK,KAAK;AACV,SAAK,KAAK,iBAAiB,WAAW,KAAK;AAAA;AAAA,MAMxC,aAAa;AAEhB,WAAO,MAAM;AAAA;AAAA,MAGV,UAAU;AACb,WAAO,KAAK,OAAO;AAAA;AAAA,MAGhB,WAAW;AACd,WAAO,KAAK,OAAO;AAAA;AAAA,MAGhB,aAAa;AAChB,WAAO,KAAK,OAAO;AAAA;AAAA,QAGd,aAAa;AAElB,UAAM,WAAW,MAAM,KAAK,KAAK;AACjC,UAAM,EAAE,MAAM,iBAAiB;AAC/B,SAAK,QAAQ;AACb,SAAK,gBAAgB;AACrB,UAAM,SAAS;AACf,WAAO,QAAQ,KAAK,sBAAsB,QAAQ,CAAC,CAAC,MAAM,SAAS,MAAM;AACxE,UAAI,KAAK,QAAQ,UAAU;AAAa,aAAK,cAAc,KAAK,OAAO;AACvE,UAAI,kBAAkB,YAAY;AACjC,YAAI;AACH,iBAAO,iBAAiB;AAAA,iBAEjB,GAAN;AAAA,kBACA;AACD,iBAAO,QAAQ,KAAK,IAAI,GAAG,OAAO;AAClC,eAAK,QAAQ,QAAQ,SAAS;AAAA;AAAA,iBAErB,kBAAkB,WAAW;AACvC,aAAK,QAAQ,QAAQ,SAAS;AAAA,aACxB;AACN,aAAK,4BAA4B;AAAA;AAAA;AAGnC,SAAK,QAAQ,KAAK,OAAO,aAAa,aAAa,GAAG;AACtD,SAAK,cAAc;AACnB,WAAO;AAAA;AAAA,EAMR,UAAU,EAAE,MAAM,gBAAgB;AACjC,SAAK,QAAQ;AACb,SAAK,gBAAgB;AAAA;AAAA,EAGtB,iBAAiB,eAAe;AAC/B,WAAO,KAAK,KAAK,oBAAoB;AAAA;AAAA,EAGtC,uBAAuB;AACtB,WAAO,KAAK,KAAK;AAAA;AAAA,EAGlB,oBAAoB,kBAAkB;AACrC,WAAO,KAAK,KAAK,oBAAoB,GAAG;AAAA;AAAA,EAGzC,mBAAmB,eAAe,kBAAkB;AACnD,WAAO,KAAK,KAAK,sBAAsB,YAAY,GAAG;AAAA;AAAA,EAMvD,mBAAmB,OAAO;AACzB,UAAM,OAAO,MAAM,QAAQ,KAAK,QAAQ;AACxC,UAAM,EAAE,IAAI,YAAY,UAAU,MAAM;AACxC,UAAM,aAAa,KAAK,SAAS;AACjC,QAAI,CAAC;AAAY;AACjB,QAAI,WAAW,KAAK,SAAS,SAAS;AACrC,UAAI;AAAY,mBAAW,kCAAkC,OAAO;AAAA;AAC/D,mBAAW,wBAAwB,OAAO;AAAA,WACzC;AAEN,UAAI;AAAY,mBAAW,yBAAyB,OAAO;AAAA;AACtD,mBAAW,eAAe,OAAO;AAAA;AAAA;AAAA,EAOxC,kBAAkB,QAAQ;AACzB,WAAO,QAAQ,CAAC,UAAU;AACzB,UAAI,MAAM,SAAS,kBAAkB;AACpC,aAAK,mBAAmB;AAAA;AAAA;AAG1B,SAAK,KAAK,kBAAkB,GAAG;AAAA;AAAA,EAMhC,cAAc,QAAQ;AACrB,SAAK,KAAK,cAAc,GAAG;AAAA;AAAA,EAG5B,cAAc;AACb,SAAK,KAAK;AAAA;AAAA,EAMX,iBAAiB,OAAO;AACvB,QAAI,MAAM,SAAS,kBAAkB;AACpC,WAAK,mBAAmB;AAAA,WAClB;AACN,WAAK,cAAc,IAAI,YAAY,MAAM,MAAM,EAAE,QAAQ;AAAA;AAAA;AAAA,QAOrD,mBAAmB,iBAAiB;AACzC,WAAO,KAAK,iBAAiB,QAAQ,CAAC,gBAAgB;AACrD,YAAM,kBAAkB,gBAAgB;AACxC,YAAM,YAAY,KAAK,WAAW,IAAI;AACtC,UAAI,CAAC;AAAW;AAChB,UAAI,CAAC,gBAAgB;AAAY,kBAAU,QAAQ,gBAAgB;AAAA;AAC9D,kBAAU,kBAAkB,gBAAgB;AAAA;AAAA;AAAA,QAI7C,WAAW;AAChB,WAAO,KAAK;AAAA;AAAA,QAGP,SAAS,OAAO;AACrB,SAAK,gBAAgB;AAAA;AAAA,EAGtB,mBAAmB,MAAM;AACxB,WAAO,KAAK,MAAM,OAAO,KAAK,QAAQ;AAAA;AAAA,EAGvC,mBAAmB,OAAO;AACzB,WAAO,QAAQ,KAAK,QAAQ;AAAA;AAAA,EAkC7B,eAAe,MAAM;AACpB,UAAM,IAAI,KAAK,eAAe,QAAQ;AACtC,WAAO,MAAM,KAAK,OAAO;AAAA;AAAA,EAQ1B,cAAc,MAAM,MAAM,OAAO;AAChC,UAAM,SAAS;AACf,UAAM,IAAI,KAAK,eAAe;AAC9B,QAAI,MAAM,MAAM;AACf,UAAI,gBAAgB,WAAW;AAC9B,YAAI,OAAO,UAAU;AAAU,eAAK,QAAQ,MAAM,SAAS,GAAG;AAAA;AACzD,eAAK,QAAQ,MAAM,SAAS;AAAA,aAC3B;AACN,aAAK,QAAQ,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,EAU/B,iBAAiB,MAAM,MAAM,OAAO;AACnC,UAAM,SAAS;AACf,UAAM,IAAI,KAAK,eAAe;AAC9B,QAAI,MAAM,MAAM;AACf,UAAI,gBAAgB,WAAW;AAC9B,YAAI,OAAO,UAAU;AAAU,eAAK,WAAW,MAAM,SAAS,GAAG;AAAA;AAC5D,eAAK,WAAW,MAAM,SAAS;AAAA,aAC9B;AACN,aAAK,WAAW,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA,EAKlC,eAAe,MAAM;AACpB,UAAM,IAAI,KAAK,eAAe;AAC9B,WAAO,MAAM,OAAO,KAAK,cAAc,KAAK;AAAA;AAAA,EAG7C,mBAAmB;AAElB,UAAM,SAAS;AACf,SAAK,eAAe,QAAQ,CAAC,MAAM,MAAM;AACxC,aAAO,QAAQ,KAAK,cAAc;AAAA;AAEnC,WAAO;AAAA;AAAA,EAGR,SAAS,MAAM;AACd,WAAO,KAAK,WAAW,IAAI,SAAS;AAAA;AAAA,EAGrC,YAAY;AAEX,WAAO,OAAO,YAAY,KAAK;AAAA;AAAA,EAGhC,cAAc,MAAM;AACnB,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM;AAAA;AAAA,EAGd,cAAc,MAAM,OAAO;AAC1B,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO;AACZ,UAAM,QAAQ;AAAA;AAAA,EAGf,kBAAkB;AAEjB,UAAM,SAAS;AACf,SAAK,WAAW,QAAQ,CAAC,GAAG,MAAM;AACjC,aAAO,KAAK,EAAE;AAAA;AAEf,WAAO;AAAA;AAAA,EAMR,gBAAgB,QAAQ;AACvB,QAAI,CAAC;AAAQ;AACb,WAAO,QAAQ,QAAQ,QAAQ,CAAC,CAAC,GAAG,OAAO;AAC1C,WAAK,cAAc,GAAG;AAAA;AAAA;AAAA,EAIxB,wBAAwB,MAAM;AAC7B,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM;AAAA;AAAA,EAGd,wBAAwB,MAAM,OAAO;AACpC,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO;AACZ,UAAM,kBAAkB;AAAA;AAAA,EAGzB,4BAA4B;AAC3B,UAAM,SAAS;AACf,SAAK,WAAW,QAAQ,CAAC,GAAG,MAAM;AACjC,aAAO,KAAK,KAAK,wBAAwB;AAAA;AAE1C,WAAO;AAAA;AAAA,EAGR,0BAA0B,QAAQ;AACjC,QAAI,CAAC;AAAQ;AACb,WAAO,QAAQ,QAAQ,QAAQ,CAAC,CAAC,GAAG,OAAO;AAC1C,WAAK,wBAAwB,GAAG;AAAA;AAAA;AAAA,EAIlC,oBAAoB,MAAM,OAAO,WAAW;AAC3C,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,eAAe,OAAO;AAAA;AAAA,EAGpC,8BAA8B,MAAM,OAAO,WAAW;AACrD,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,yBAAyB,OAAO;AAAA;AAAA,EAG9C,6BAA6B,MAAM,OAAO,SAAS;AAClD,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,wBAAwB,OAAO;AAAA;AAAA,EAG7C,uCAAuC,MAAM,OAAO,SAAS;AAC5D,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,kCAAkC,OAAO;AAAA;AAAA,EAGvD,kCAAkC,MAAM,OAAO,SAAS;AACvD,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,6BAA6B,OAAO;AAAA;AAAA,EAGlD,4CAA4C,MAAM,OAAO,SAAS;AACjE,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,uCAAuC,OAAO;AAAA;AAAA,EAG5D,qBAAqB,MAAM,QAAQ,WAAW,cAAc;AAC3D,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,gBAAgB,QAAQ,WAAW;AAAA;AAAA,EAGjD,+BAA+B,MAAM,QAAQ,WAAW,cAAc;AACrE,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,0BAA0B,QAAQ,WAAW;AAAA;AAAA,EAG3D,yBAAyB,MAAM,QAAQ,WAAW,UAAU;AAC3D,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,oBAAoB,QAAQ,WAAW;AAAA;AAAA,EAGrD,mCAAmC,MAAM,QAAQ,WAAW,UAAU;AACrE,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,8BAA8B,QAAQ,WAAW;AAAA;AAAA,EAG/D,2BAA2B,MAAM,YAAY;AAC5C,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,sBAAsB;AAAA;AAAA,EAGpC,yBAAyB,MAAM,YAAY;AAC1C,UAAM,QAAQ,KAAK,WAAW,IAAI;AAClC,QAAI,CAAC;AAAO,aAAO;AACnB,WAAO,MAAM,oBAAoB;AAAA;AAAA,EAOlC,cAAc,MAAM,QAAQ;AAC3B,SAAK,KAAK,iBAAiB,MAAM;AAAA;AAAA,EAOlC,iBAAiB,MAAM,QAAQ;AAC9B,SAAK,KAAK,oBAAoB,MAAM;AAAA;AAAA,QAG/B,UAAU;AACf,SAAK;AACL,SAAK,uBAAuB,QAAQ,CAAC,QAAQ;AAC5C,UAAI,OAAO,QAAQ;AAAU,eAAO,aAAa;AAAA;AAElD,UAAM,KAAK,KAAK;AAChB,SAAK,KAAK;AAAA;AAAA;;;ACteZ,4BAAqC;AAAA,eAKvB,OAAO,QAAQ,YAAY,IAAI;AAC3C,UAAM,EAAE,cAAc,SAAS,UAAU,eAAe;AACxD,UAAM,EAAE,cAAc,eAAe,yBAAyB,IAAI,yBAAyB;AAC3F,UAAM,qBAAqB,OAAO,QAAQ,cACxC,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE,oBAAoB;AACpD,oBAAc,QAAQ;AACtB,aAAO;AAAA,OACL;AACJ,UAAM,2BAA2B,OAAO,QAAQ,cAC9C,OAAO,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,OAAO,MAAM,cAAc,UAAU,UAAU,cAAc,UAAU,SAAS,aAAa;AACjI,oBAAc,QAAQ,EAAE,IAAI,OAAO,MAAM,cAAc,UAAU,UAAU,cAAc,UAAU,SAAS;AAC5G,aAAO;AAAA,OACL;AACJ,UAAM,0BAAkB,aAAa,cAAc,2BAAW,UAAU;AAExE,UAAM,UAAU;AAAA,MACf;AAAA,MACA,eAAe;AAAA,MACf,kBAAkB;AAAA,QACjB;AAAA,QACA;AAAA,QACA,yBAAyB,OAAO,OAAO,sBACrC,IAAI,CAAC,WAAW,KAAK,IAAI,GAAG,kCAAQ,aAAY;AAAA,QAClD,gBAAgB,OAAO,KAAK;AAAA,QAC5B;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAGF,UAAM,OAAO,IAAI,aAAa,QAAQ;AACtC,UAAM,KAAK;AACX,WAAO;AAAA;AAAA;",
  "names": []
}
